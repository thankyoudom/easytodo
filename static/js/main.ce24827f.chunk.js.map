{"version":3,"sources":["Firebase.js","Home.js","Welcome.js","Navigation.js","FormError.js","Login.js","Register.js","MeetingsList.js","Meetings.js","CheckIn.js","AttendeesList.js","Attendees.js","App.js","registerServiceWorker.js","index.js"],"names":["app","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","getAuth","getDatabase","GoogleAuthProvider","Home","Component","render","user","this","props","React","createElement","className","style","fontSize","fontWeight","href","Link","to","Welcome","userName","logOutUser","onClick","e","Navigation","FaUsers","FormError","theMessage","Login","constructor","super","state","email","password","errorMessage","handleChange","bind","handleSubmit","itemName","target","name","itemValue","value","setState","preventDefault","auth","signInWithEmailAndPassword","then","navigate","catch","error","message","onSubmit","htmlFor","required","type","id","placeholder","onChange","Register","displayName","passOne","passTwo","registrationInfo","createUserWithEmailAndPassword","registerUser","MeetingsList","fetchStarCounts","async","db","userMeetingsRef","ref","concat","userID","snapshot","get","exists","meetings","val","starCounts","meetingID","attendees","starCount","attendeeID","starCountRef","console","deleteMeeting","whichMeeting","meetingRef","remove","log","componentDidMount","myMeetings","map","item","key","role","aria-label","title","GoTrashcan","FaLink","GoListUnordered","meetingName","Meetings","addMeeting","aria-describedby","length","CheckIn","attendeesRef","push","attendeeName","attendeeEmail","star","AttendeesList","deleteAttendee","whichAttendee","adminUser","attendeeRef","toggleStar","starLogRef","currentTimestamp","Date","toISOString","newStarLogRef","set","timestamp","starMessage","messageSubmitted","handleMessageChange","event","admin","myAttendees","GoStar","GoMail","Attendees","searchQuery","allAttendees","displayAttendees","resetQuery","chooseRandom","onValue","attendeesList","randomAttendee","Math","floor","random","filteredAttendees","filter","toLowerCase","match","FaRandom","FaUndo","App","onAuthStateChanged","FBUser","updateProfile","uid","signOut","refPath","meetingsRef","howManyMeetings","meetingsList","Router","path","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","ReactDOM","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.ce24827f.chunk.js","sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth, GoogleAuthProvider } from \"firebase/auth\";\nimport { getDatabase } from \"firebase/database\";\n\n// Your Firebase configuration\nconst config = {\n  apiKey: 'AIzaSyA2IQa1_2pwmvxk7aygaLxwmnWKp5GWWFI',\n  authDomain: 'easytodo-a8d05.firebaseapp.com',\n  databaseURL: 'easytodo-a8d05-default-rtdb.firebaseio.com/',\n  projectId: 'easytodo-a8d05',\n  storageBucket: 'easytodo-a8d05.appspot.com',\n  messagingSenderId: '941406707669 '\n};\n\n// Initialize Firebase\nconst app = initializeApp(config);\nconst auth = getAuth(app);\nconst database = getDatabase(app);\n\n// Set up Google Auth provider\nconst provider = new GoogleAuthProvider();\n\n// Export the necessary components\nexport { provider, auth, app, database };\n\n//apiKey: 'AIzaSyCk9mIMo7jjWzJ2UYtA8435he3vl1mWdpc',\n//authDomain: 'react-spas.firebaseapp.com',\n//databaseURL: 'https://react-spas.firebaseio.com',\n//projectId: 'react-spas',\n//storageBucket: 'react-spas.appspot.com',\n//messagingSenderId: '579151738498'","import React, { Component } from 'react';\nimport { Link } from '@reach/router';\n\nclass Home extends Component {\n  render() {\n    const { user } = this.props;\n\n    const biggerLead = {\n      fontSize: 1.4 + 'em',\n      fontWeight: 200\n    };\n\n    return (\n      <div className=\"container text-center\">\n        <div className=\"row justify-content-center\">\n          <div className=\"col-10 col-md-10 col-lg-8 col-xl-7\">\n            <div\n              className=\"display-4 text-primary mt-3 mb-2\"\n              style={{\n                fontSize: 2.8 + 'em'\n              }}\n            >\n              easy todo\n            </div>\n            <p className=\"lead\" style={biggerLead}>\n              This simple app creates meetings, allows people to check\n              in, and picks random users to award giveaways. It's a\n              good example of a Single Page Application which includes\n              connection to a database and routing. It's a practical\n              way to learn <a href=\"https://reactjs.org/\">React</a>{' '}\n              with <a href=\"https://firebase.google.com\">Firebase</a>.\n            </p>\n\n            {user == null && (\n              <span>\n                <Link\n                  to=\"/register\"\n                  className=\"btn btn-outline-primary mr-2\"\n                >\n                  register\n                </Link>\n                <Link\n                  to=\"/login\"\n                  className=\"btn btn-outline-primary mr-2\"\n                >\n                  log In\n                </Link>\n              </span>\n            )}\n            {user && (\n              <Link to=\"/tasks\" className=\"btn btn-primary\">\n                tasks\n              </Link>\n            )}\n          </div>{' '}\n          {/* columns */}\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport { Link } from '@reach/router';\n\nclass Welcome extends Component {\n  render() {\n    const { userName, logOutUser } = this.props;\n\n    return (\n      <div className=\"text-center mt-4\">\n        <span className=\"text-secondary font-weight-bold pl-1\">\n          Welcome {userName}\n        </span>\n        ,\n        <Link\n          to=\"/login\"\n          className=\"font-weight-bold text-primary pl-1\"\n          onClick={e => logOutUser(e)}\n        >\n          log out\n        </Link>\n      </div>\n    );\n  }\n}\n\nexport default Welcome;\n","import React, { Component } from 'react';\nimport { FaUsers } from 'react-icons/fa';\nimport { Link } from '@reach/router';\n\nclass Navigation extends Component {\n  render() {\n    const { user, logOutUser } = this.props;\n\n    return (\n      <nav className=\"site-nav family-sans navbar navbar-expand bg-primary navbar-dark higher\">\n        <div className=\"container-fluid\">\n          <Link to=\"/\" className=\"navbar-brand\">\n            <FaUsers className=\"mr-1\" /> easy todo\n          </Link>\n          <div className=\"navbar-nav ml-auto\">\n            {user && (\n              <Link className=\"nav-item nav-link\" to=\"/tasks\">\n                tasks\n              </Link>\n            )}\n            {!user && (\n              <Link className=\"nav-item nav-link\" to=\"/login\">\n                log in\n              </Link>\n            )}\n            {!user && (\n              <Link className=\"nav-item nav-link\" to=\"/register\">\n                register\n              </Link>\n            )}\n            {user && (\n              <Link\n                className=\"nav-item nav-link\"\n                to=\"/login\"\n                onClick={e => logOutUser(e)}\n              >\n                log out\n              </Link>\n            )}\n          </div>\n        </div>\n      </nav>\n    );\n  }\n}\n\nexport default Navigation;\n","import React, { Component } from 'react';\n\nclass FormError extends Component {\n  render() {\n    const { theMessage } = this.props;\n\n    return (\n      <div className=\"col-12 alert alert-danger px-3\">\n        {theMessage}\n      </div>\n    );\n  }\n}\n\nexport default FormError;\n","import React, { Component } from 'react';\nimport { getAuth, signInWithEmailAndPassword } from 'firebase/auth';\nimport { app } from './Firebase'; // Ensure this imports your Firebase initialization\nimport FormError from './FormError';\nimport { navigate } from '@reach/router';\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: '',\n      password: '',\n      errorMessage: null\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    const itemName = e.target.name;\n    const itemValue = e.target.value;\n\n    this.setState({ [itemName]: itemValue });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    const { email, password } = this.state;\n    const auth = getAuth(app);\n\n    signInWithEmailAndPassword(auth, email, password)\n      .then(() => {\n        navigate('/meetings');\n      })\n      .catch(error => {\n        this.setState({ errorMessage: error.message });\n      });\n  }\n\n  render() {\n    return (\n      <form className=\"mt-3\" onSubmit={this.handleSubmit}>\n        <div className=\"container\">\n          <div className=\"row justify-content-center\">\n            <div className=\"col-lg-6\">\n              <div className=\"card bg-light\">\n                <div className=\"card-body\">\n                  <h3 className=\"font-weight-light mb-3\">Log in</h3>\n                  <section className=\"form-group\">\n                    {this.state.errorMessage && (\n                      <FormError theMessage={this.state.errorMessage} />\n                    )}\n                    <label\n                      className=\"form-control-label sr-only\"\n                      htmlFor=\"Email\"\n                    >\n                      Email\n                    </label>\n                    <input\n                      required\n                      className=\"form-control\"\n                      type=\"email\"\n                      id=\"email\"\n                      name=\"email\"\n                      placeholder=\"Email\"\n                      value={this.state.email}\n                      onChange={this.handleChange}\n                    />\n                  </section>\n                  <section className=\"form-group\">\n                    <input\n                      required\n                      className=\"form-control\"\n                      type=\"password\"\n                      name=\"password\"\n                      placeholder=\"Password\"\n                      value={this.state.password}\n                      onChange={this.handleChange}\n                    />\n                  </section>\n                  <div className=\"form-group text-right mb-0\">\n                    <button className=\"btn btn-primary\" type=\"submit\">\n                      Log in\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default Login;\n","import React, { Component } from 'react';\nimport FormError from './FormError';\nimport { getAuth, createUserWithEmailAndPassword } from 'firebase/auth';\nimport { app } from './Firebase'; // Ensure this imports your Firebase initialization\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      displayName: '',\n      email: '',\n      passOne: '',\n      passTwo: '',\n      errorMessage: null\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    const itemName = e.target.name;\n    const itemValue = e.target.value;\n\n    this.setState({ [itemName]: itemValue }, () => {\n      if (this.state.passOne !== this.state.passTwo) {\n        this.setState({ errorMessage: 'Passwords do not match' });\n      } else {\n        this.setState({ errorMessage: null });\n      }\n    });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    const registrationInfo = {\n      displayName: this.state.displayName,\n      email: this.state.email,\n      password: this.state.passOne\n    };\n\n    const auth = getAuth(app);\n    createUserWithEmailAndPassword(auth, registrationInfo.email, registrationInfo.password)\n      .then(() => {\n        this.props.registerUser(registrationInfo.displayName);\n      })\n      .catch(error => {\n        if (error.message !== null) {\n          this.setState({ errorMessage: error.message });\n        } else {\n          this.setState({ errorMessage: null });\n        }\n      });\n  }\n\n  render() {\n    return (\n      <form className=\"mt-3\" onSubmit={this.handleSubmit}>\n        <div className=\"container\">\n          <div className=\"row justify-content-center\">\n            <div className=\"col-lg-8\">\n              <div className=\"card bg-light\">\n                <div className=\"card-body\">\n                  <h3 className=\"font-weight-light mb-3\">Register</h3>\n                  <div className=\"form-row\">\n                    {this.state.errorMessage !== null ? (\n                      <FormError theMessage={this.state.errorMessage} />\n                    ) : null}\n                    <section className=\"col-sm-12 form-group\">\n                      <label\n                        className=\"form-control-label sr-only\"\n                        htmlFor=\"displayName\"\n                      >\n                        Display Name\n                      </label>\n                      <input\n                        className=\"form-control\"\n                        type=\"text\"\n                        id=\"displayName\"\n                        placeholder=\"Display Name\"\n                        name=\"displayName\"\n                        required\n                        value={this.state.displayName}\n                        onChange={this.handleChange}\n                      />\n                    </section>\n                  </div>\n                  <section className=\"form-group\">\n                    <label\n                      className=\"form-control-label sr-only\"\n                      htmlFor=\"email\"\n                    >\n                      Email\n                    </label>\n                    <input\n                      className=\"form-control\"\n                      type=\"email\"\n                      id=\"email\"\n                      placeholder=\"Email Address\"\n                      required\n                      name=\"email\"\n                      value={this.state.email}\n                      onChange={this.handleChange}\n                    />\n                  </section>\n                  <div className=\"form-row\">\n                    <section className=\"col-sm-6 form-group\">\n                      <input\n                        className=\"form-control\"\n                        type=\"password\"\n                        name=\"passOne\"\n                        placeholder=\"Password\"\n                        value={this.state.passOne}\n                        onChange={this.handleChange}\n                      />\n                    </section>\n                    <section className=\"col-sm-6 form-group\">\n                      <input\n                        className=\"form-control\"\n                        type=\"password\"\n                        required\n                        name=\"passTwo\"\n                        placeholder=\"Repeat Password\"\n                        value={this.state.passTwo}\n                        onChange={this.handleChange}\n                      />\n                    </section>\n                  </div>\n                  <div className=\"form-group text-right mb-0\">\n                    <button className=\"btn btn-primary\" type=\"submit\">\n                      Register\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default Register;\n","import React, { Component } from 'react';\nimport { app } from './Firebase'; // Ensure this imports your correctly initialized Firebase app\nimport { getDatabase, ref, remove, get } from 'firebase/database';\nimport { GoTrashcan, GoListUnordered } from 'react-icons/go';\nimport { FaLink } from 'react-icons/fa';\nimport { navigate } from '@reach/router';\n\nclass MeetingsList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      starCounts: {}\n    };\n    this.deleteMeeting = this.deleteMeeting.bind(this);\n  }\n\n  componentDidMount() {\n    this.fetchStarCounts();\n  }\n\n  fetchStarCounts = async () => {\n    const db = getDatabase(app);\n    const userMeetingsRef = ref(db, `meetings/${this.props.userID}`);\n\n    try {\n      const snapshot = await get(userMeetingsRef);\n      if (snapshot.exists()) {\n        const meetings = snapshot.val();\n        const starCounts = {};\n\n        for (const meetingID in meetings) {\n          const attendees = meetings[meetingID].attendees;\n          if (attendees) {\n            let starCount = 0;\n            for (const attendeeID in attendees) {\n              const starCountRef = ref(\n                db,\n                `meetings/${this.props.userID}/${meetingID}/attendees/${attendeeID}/starCounts`\n              );\n              const starCountSnapshot = await get(starCountRef);\n              starCount += starCountSnapshot.val() || 0;\n            }\n            starCounts[meetingID] = starCount;\n          } else {\n            starCounts[meetingID] = 0;\n          }\n        }\n\n        this.setState({ starCounts });\n      }\n    } catch (error) {\n      console.error(\"Error fetching star counts: \", error);\n    }\n  };\n\n  deleteMeeting = (e, whichMeeting) => {\n    e.preventDefault();\n    const db = getDatabase(app);\n    const meetingRef = ref(db, `meetings/${this.props.userID}/${whichMeeting}`);\n    remove(meetingRef)\n      .then(() => {\n        console.log(`Meeting ${whichMeeting} deleted successfully`);\n        this.fetchStarCounts(); // Refresh star counts after deletion\n      })\n      .catch(error => {\n        console.error(\"Error deleting meeting: \", error);\n      });\n  };\n\n  render() {\n    const { meetings } = this.props;\n    const { starCounts } = this.state;\n    const myMeetings = meetings.map(item => {\n      return (\n        <div className=\"list-group-item d-flex\" key={item.meetingID}>\n          <section\n            className=\"btn-group align-self-center\"\n            role=\"group\"\n            aria-label=\"Meeting Options\"\n          >\n            <button\n              className=\"btn btn-sm btn-outline-secondary\"\n              title=\"Delete Meeting\"\n              onClick={e => this.deleteMeeting(e, item.meetingID)}\n            >\n              <GoTrashcan />\n            </button>\n            <button\n              className=\"btn btn-sm btn-outline-secondary\"\n              title=\"Check In\"\n              onClick={() =>\n                navigate(\n                  `/checkin/${this.props.userID}/${item.meetingID}`\n                )\n              }\n            >\n              <FaLink />\n            </button>\n            <button\n              className=\"btn btn-sm btn-outline-secondary\"\n              title=\"Attendees List\"\n              onClick={() =>\n                navigate(\n                  `/attendees/${this.props.userID}/${item.meetingID}`\n                )\n              }\n            >\n              <GoListUnordered />\n            </button>\n          </section>\n\n          <section className=\"pl-3 text-left align-self-center\">\n            {item.meetingName} ({starCounts[item.meetingID] || 0} ⭐)\n          </section>\n        </div>\n      );\n    });\n\n    return <div>{myMeetings}</div>;\n  }\n}\n\nexport default MeetingsList;\n","import React, { Component } from 'react';\nimport MeetingsList from './MeetingsList';\n\nclass Meetings extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      meetingName: ''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    const itemName = e.target.name;\n    const itemValue = e.target.value;\n\n    this.setState({ [itemName]: itemValue });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n    this.props.addMeeting(this.state.meetingName);\n    this.setState({ meetingName: '' });\n  }\n\n  render() {\n    return (\n      <div className=\"container mt-4\">\n        <div className=\"row justify-content-center\">\n          <div className=\"col-md-8 text-center\">\n            <h1 className=\"font-weight-light\">Add a Task</h1>\n            <div className=\"card bg-light\">\n              <div className=\"card-body text-center\">\n                <form\n                  className=\"formgroup\"\n                  onSubmit={this.handleSubmit}\n                >\n                  <div className=\"input-group input-group-lg\">\n                    <input\n                      type=\"text\"\n                      className=\"form-control\"\n                      name=\"meetingName\"\n                      placeholder=\"task name\"\n                      aria-describedby=\"buttonAdd\"\n                      value={this.state.meetingName}\n                      onChange={this.handleChange}\n                    />\n                    <div className=\"input-group-append\">\n                      <button\n                        type=\"submit\"\n                        className=\"btn btn-sm btn-info\"\n                        id=\"buttonAdd\"\n                      >\n                        +\n                      </button>\n                    </div>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n\n          <div className=\"col-11 col-md-6 text-center\">\n            <div className=\"card border-top-0 rounded-0\">\n              {this.props.meetings && this.props.meetings.length ? (\n                <div className=\"card-body py-2\">\n                  <h4 className=\"card-title font-weight-light m-0\">\n                    your tasks\n                  </h4>\n                </div>\n              ) : null}\n\n              {this.props.meetings && (\n                <div className=\"list-group list-group-flush\">\n                  <MeetingsList\n                    userID={this.props.userID}\n                    meetings={this.props.meetings}\n                  />\n                </div>\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Meetings;\n","import React, { Component } from 'react';\nimport { getDatabase, ref, push } from 'firebase/database';\nimport { app } from './Firebase';\nimport { navigate } from '@reach/router';\n\nclass CheckIn extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      displayName: '',\n      email: ''\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleChange(e) {\n    const itemName = e.target.name;\n    const itemValue = e.target.value;\n\n    this.setState({ [itemName]: itemValue });\n  }\n\n  handleSubmit(e) {\n    e.preventDefault();\n\n    const db = getDatabase(app);\n    const attendeesRef = ref(db, `meetings/${this.props.userID}/${this.props.meetingID}/attendees`);\n    push(attendeesRef, {\n      attendeeName: this.state.displayName,\n      attendeeEmail: this.state.email,\n      star: false\n    });\n    navigate(`/attendees/${this.props.userID}/${this.props.meetingID}`);\n  }\n\n  render() {\n    return (\n      <form className=\"mt-3\" onSubmit={this.handleSubmit}>\n        <div className=\"container\">\n          <div className=\"row justify-content-center\">\n            <div className=\"col-lg-6\">\n              <div className=\"card bg-light\">\n                <div className=\"card-body\">\n                  <h3 className=\"font-weight-light mb-3\">Check in</h3>\n                  <section className=\"form-group\">\n                    <label\n                      className=\"form-control-label sr-only\"\n                      htmlFor=\"displayName\"\n                    >\n                      Name\n                    </label>\n                    <input\n                      required\n                      className=\"form-control\"\n                      type=\"text\"\n                      id=\"displayName\"\n                      name=\"displayName\"\n                      placeholder=\"Name\"\n                      value={this.state.displayName}\n                      onChange={this.handleChange}\n                    />\n                  </section>\n                  <section className=\"form-group\">\n                    <label\n                      className=\"form-control-label sr-only\"\n                      htmlFor=\"email\"\n                    >\n                      Email\n                    </label>\n                    <input\n                      required\n                      className=\"form-control\"\n                      type=\"email\"\n                      id=\"email\"\n                      name=\"email\"\n                      placeholder=\"Email\"\n                      value={this.state.email}\n                      onChange={this.handleChange}\n                    />\n                  </section>\n                  <div className=\"form-group text-right mb-0\">\n                    <button className=\"btn btn-primary\" type=\"submit\">\n                      Check in\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </form>\n    );\n  }\n}\n\nexport default CheckIn;\n","import React, { Component } from 'react';\nimport { GoTrashcan, GoMail, GoStar } from 'react-icons/go';\nimport { app } from './Firebase';\nimport { getDatabase, ref, remove, set, get, push } from 'firebase/database';\n\nclass AttendeesList extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      starMessage: ''\n    };\n\n    this.handleMessageChange = this.handleMessageChange.bind(this);\n    this.deleteAttendee = this.deleteAttendee.bind(this);\n    this.toggleStar = this.toggleStar.bind(this);\n  }\n\n  handleMessageChange(event) {\n    this.setState({ starMessage: event.target.value });\n  }\n\n  deleteAttendee = (e, whichMeeting, whichAttendee) => {\n    e.preventDefault();\n    const adminUser = this.props.adminUser;\n    const db = getDatabase(app);\n    const attendeeRef = ref(\n      db,\n      `meetings/${adminUser}/${whichMeeting}/attendees/${whichAttendee}`\n    );\n    remove(attendeeRef)\n      .then(() => {\n        console.log(`Attendee ${whichAttendee} deleted successfully`);\n      })\n      .catch(error => {\n        console.error(\"Error deleting attendee: \", error);\n      });\n  };\n\n  toggleStar = async (e, whichMeeting, whichAttendee) => {\n    e.preventDefault();\n    const adminUser = this.props.adminUser;\n    const db = getDatabase(app);\n    const starCountRef = ref(\n      db,\n      `meetings/${adminUser}/${whichMeeting}/attendees/${whichAttendee}/starCounts`\n    );\n    const starLogRef = ref(\n      db,\n      `meetings/${adminUser}/${whichMeeting}/attendees/${whichAttendee}/starLogs`\n    );\n\n    try {\n      const currentTimestamp = new Date().toISOString();\n      const newStarLogRef = push(starLogRef);\n      await set(newStarLogRef, { \n        timestamp: currentTimestamp,\n        message: this.state.starMessage\n      });\n\n      const starCountSnapshot = await get(starCountRef);\n      const starCount = starCountSnapshot.val() || 0;\n      await set(starCountRef, starCount + 1);\n\n      // Clear the message input after submission\n      this.setState({ starMessage: '', messageSubmitted: true });\n\n      console.log(`Star toggled for attendee ${whichAttendee}`);\n    } catch (error) {\n      console.error(\"Error toggling star: \", error);\n    }\n  };\n\n  render() {\n    const admin = this.props.adminUser === this.props.userID;\n    const attendees = this.props.attendees;\n    const myAttendees = attendees.map(item => {\n      return (\n        <div\n          className=\"col-8 col-sm-6 col-md-4 col-lg-3 mb-2 p-0 px-1\"\n          key={item.attendeeID}\n        >\n          <div className=\"card \">\n            <div\n              className={\n                'card-body px-3 py-2 d-flex align-items-center ' +\n                (admin ? '' : 'justify-content-center')\n              }\n            >\n              {admin && (\n                <div className=\"btn-group pr-2\">\n                  <button\n                    className={\n                      'btn btn-sm ' +\n                      (item.star\n                        ? 'btn-info'\n                        : 'btn-outline-secondary')\n                    }\n                    title=\"Give user a star\"\n                    onClick={e =>\n                      this.toggleStar(\n                        e,\n                        this.props.meetingID,\n                        item.attendeeID\n                      )\n                    }\n                  >\n                    <GoStar />\n                  </button>\n                  <a\n                    href={`mailto:${item.attendeeEmail}`}\n                    className=\"btn btn-sm btn-outline-secondary\"\n                    title=\"Mail Attendee\"\n                  >\n                    <GoMail />\n                  </a>\n                  <button\n                    className=\"btn btn-sm btn-outline-secondary\"\n                    title=\"Delete Attendee\"\n                    onClick={e =>\n                      this.deleteAttendee(\n                        e,\n                        this.props.meetingID,\n                        item.attendeeID\n                      )\n                    }\n                  >\n                    <GoTrashcan />\n                  </button>\n                </div>\n              )}\n\n              <div>{item.attendeeName}</div>\n            </div>\n            <div className=\"card-footer\">\n              <input \n                type=\"text\" \n                className=\"form-control\" \n                placeholder=\"Enter your message\" \n                value={this.state.starMessage} \n                onChange={this.handleMessageChange} \n              />\n            </div>\n          </div>\n        </div>\n      );\n    });\n\n    return (\n      <div className=\"row justify-content-center\">\n        {myAttendees}\n      </div>\n    );\n  }\n}\n\nexport default AttendeesList;\n","import React, { Component } from 'react';\nimport { getDatabase, ref, onValue } from 'firebase/database';\nimport { app } from './Firebase';\nimport AttendeesList from './AttendeesList';\nimport { FaUndo, FaRandom } from 'react-icons/fa';\n\nclass Attendees extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchQuery: '',\n      allAttendees: [],\n      displayAttendees: []\n    };\n\n    this.handleChange = this.handleChange.bind(this);\n    this.resetQuery = this.resetQuery.bind(this);\n    this.chooseRandom = this.chooseRandom.bind(this);\n  }\n\n  componentDidMount() {\n    const db = getDatabase(app);\n    const attendeesRef = ref(db, `meetings/${this.props.userID}/${this.props.meetingID}/attendees`);\n\n    onValue(attendeesRef, snapshot => {\n      let attendees = snapshot.val();\n      let attendeesList = [];\n      for (let item in attendees) {\n        attendeesList.push({\n          attendeeID: item,\n          attendeeName: attendees[item].attendeeName,\n          attendeeEmail: attendees[item].attendeeEmail,\n          star: attendees[item].star\n        });\n      }\n      this.setState({\n        allAttendees: attendeesList,\n        displayAttendees: attendeesList\n      });\n    });\n  }\n\n  handleChange(e) {\n    const itemName = e.target.name;\n    const itemValue = e.target.value;\n\n    this.setState({ [itemName]: itemValue });\n  }\n\n  chooseRandom() {\n    const randomAttendee = Math.floor(Math.random() * this.state.allAttendees.length);\n    this.resetQuery();\n    this.setState({\n      displayAttendees: [this.state.allAttendees[randomAttendee]]\n    });\n  }\n\n  resetQuery() {\n    this.setState({\n      displayAttendees: this.state.allAttendees,\n      searchQuery: ''\n    });\n  }\n\n  render() {\n    const dataFilter = item => item.attendeeName.toLowerCase().match(this.state.searchQuery.toLowerCase());\n    const filteredAttendees = this.state.displayAttendees.filter(dataFilter);\n\n    return (\n      <div className=\"container mt-4\">\n        <div className=\"row justify-content-center\">\n          <div className=\"col-md-8\">\n            <h1 className=\"font-weight-light text-center\">Attendees</h1>\n\n            <div className=\"card bg-light mb-4\">\n              <div className=\"card-body text-center\">\n                <div className=\"input-group input-group-lg\">\n                  <input\n                    type=\"text\"\n                    name=\"searchQuery\"\n                    value={this.state.searchQuery}\n                    placeholder=\"Search Attendees\"\n                    className=\"form-control\"\n                    onChange={this.handleChange}\n                  />\n                  <div className=\"input-group-append\">\n                    <button\n                      className=\"btn btn-sm btn-outline-info\"\n                      title=\"Pick a random attendee\"\n                      onClick={() => this.chooseRandom()}\n                    >\n                      <FaRandom />\n                    </button>\n                    <button\n                      className=\"btn btn-sm btn-outline-info\"\n                      title=\"Reset Search\"\n                      onClick={() => this.resetQuery()}\n                    >\n                      <FaUndo />\n                    </button>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <AttendeesList\n          userID={this.props.userID}\n          meetingID={this.props.meetingID}\n          adminUser={this.props.adminUser}\n          attendees={filteredAttendees}\n        />\n      </div>\n    );\n  }\n}\n\nexport default Attendees;\n","// Import React\nimport React, { Component } from 'react';\nimport { Router, navigate } from '@reach/router';\nimport { getAuth, onAuthStateChanged, signOut } from 'firebase/auth';\nimport { getDatabase, ref, onValue, push } from 'firebase/database';\nimport { app } from './Firebase';\n\nimport Home from './Home';\nimport Welcome from './Welcome';\nimport Navigation from './Navigation';\nimport Login from './Login';\nimport Register from './Register';\nimport Meetings from './Meetings';\nimport CheckIn from './CheckIn';\nimport Attendees from './Attendees';\n\nclass App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      user: null,\n      displayName: null,\n      userID: null,\n      meetings: [],\n      howManyMeetings: 0,\n    };\n  }\n\n  componentDidMount() {\n    const auth = getAuth(app);\n    const db = getDatabase(app);\n\n    onAuthStateChanged(auth, (FBUser) => {\n      if (FBUser) {\n        this.setState({\n          user: FBUser,\n          displayName: FBUser.displayName,\n          userID: FBUser.uid,\n        });\n\n        const meetingsRef = ref(db, 'meetings/' + FBUser.uid);\n\n        onValue(meetingsRef, (snapshot) => {\n          let meetings = snapshot.val();\n          let meetingsList = [];\n\n          for (let item in meetings) {\n            meetingsList.push({\n              meetingID: item,\n              meetingName: meetings[item].meetingName,\n            });\n          }\n\n          this.setState({\n            meetings: meetingsList,\n            howManyMeetings: meetingsList.length,\n          });\n        });\n      } else {\n        this.setState({ user: null });\n      }\n    });\n  }\n\n  registerUser = (userName) => {\n    const auth = getAuth(app);\n    onAuthStateChanged(auth, (FBUser) => {\n      FBUser.updateProfile({\n        displayName: userName,\n      }).then(() => {\n        this.setState({\n          user: FBUser,\n          displayName: FBUser.displayName,\n          userID: FBUser.uid,\n        });\n        navigate('/meetings');\n      });\n    });\n  };\n\n  logOutUser = (e) => {\n    e.preventDefault();\n    this.setState({\n      displayName: null,\n      userID: null,\n      user: null,\n    });\n\n    const auth = getAuth(app);\n    signOut(auth).then(() => {\n      navigate('/login');\n    });\n  };\n\n  addMeeting = (meetingName) => {\n    const db = getDatabase(app);\n    const refPath = `meetings/${this.state.user.uid}`;\n    const meetingsRef = ref(db, refPath);\n    push(meetingsRef, { meetingName: meetingName });\n  };\n\n  render() {\n    return (\n      <div>\n        <Navigation user={this.state.user} logOutUser={this.logOutUser} />\n        {this.state.user && (\n          <Welcome\n            userName={this.state.displayName}\n            logOutUser={this.logOutUser}\n          />\n        )}\n\n        <Router>\n          <Home path=\"/\" user={this.state.user} />\n          <Login path=\"/login\" />\n          <Meetings\n            path=\"/tasks\"\n            meetings={this.state.meetings}\n            addMeeting={this.addMeeting}\n            userID={this.state.userID}\n          />\n          <Attendees\n            path=\"/attendees/:userID/:meetingID\"\n            adminUser={this.state.userID}\n          />\n          <CheckIn path=\"/checkin/:userID/:meetingID\" />\n          <Register\n            path=\"/register\"\n            registerUser={this.registerUser}\n          />\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport App from './App';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\n\nimport registerServiceWorker from './registerServiceWorker';\n\nReactDOM.render(\n  <App />,\n\n  document.getElementById('root')\n);\nregisterServiceWorker();\n"],"sourceRoot":""}